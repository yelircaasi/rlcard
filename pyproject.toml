[tool.poetry]
name = "rlcard"
version = "1.0.7"
description = "A Toolkit for Reinforcement Learning in Card Games."
authors = [
    "Data Analytics at Texas A&M (DATA) Lab <daochen.zha@tamu.edu>",
]
maintainers = []
license = "MIT"

readme = "README.md"

packages = [
    { include = "poetry", from = "src" }
]
include = [
    { path = "tests", format = "sdist" }
]

homepage = "https://github.com/datamllab/rlcard"
repository = "https://github.com/datamllab/rlcard"
documentation = "https://rlcard.org/"

keywords = ["reinforcement learning", "game", "RL", "AI"]

classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.7",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

#[tool.poetry.urls]

[tool.poetry.build]
generate-setup-file = true

# Requirements
[tool.poetry.dependencies]
python = "^3.7"
numpy = "^1.16.3"
termcolor = "^..."
torch = { version = "^...", optional = true }
GitPython = { version = "^...", optional = true }
gitdb2 = { version = "^...", optional = true }
matplotlib = { version = "^...", optional = true }
# TODO: get versions
[tool.poetry.group.dev.dependencies]
#pre-commit = "^2.6"

[tool.poetry.extras]
torch = ["torch", "GitPython", "gitdb2", "matplotlib"]

[tool.poetry.group.test.dependencies]
pytest = "^6.2"
pytest-cover = "^..."

[tool.poetry.group.typing.dependencies]
# mypy = ">=1.0"
# types-html5lib = ">=1.1.9"
# types-jsonschema = ">=4.9.0"
# types-requests = ">=2.28.8"
# typing-extensions = { version = "^4.0.0", python = "<3.8" }

# only used in github actions
[tool.poetry.group.github-actions]
optional = true

[tool.poetry.group.github-actions.dependencies]
pytest-github-actions-annotate-failures = "^0.1.7"


[tool.poetry.scripts]
poetry = "poetry.console.application:main"


[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
# py_version = 37
# profile = "black"
# force_single_line = true
# combine_as_imports = true
# lines_between_types = 1
# lines_after_imports = 2
# src_paths = ["src", "tests"]
# extend_skip = ["setup.py"]
# known_third_party = ["poetry.core"]


[tool.black]
target-version = ['py37']
preview = true
force-exclude = '''
.*/setup\.py$
'''


[tool.mypy]
# files = "src"
# mypy_path = "src"
# namespace_packages = true
# explicit_package_bases = true
# show_error_codes = true
# strict = true
# enable_error_code = [
#     "ignore-without-code",
#     "redundant-expr",
#     "truthy-bool",
# ]

# use of importlib-metadata backport at python3.7 makes it impossible to
# satisfy mypy without some ignores: but we get a different set of ignores at
# different python versions.
#
# <https://github.com/python/mypy/issues/8823>, meanwhile suppress that
# warning.
[[tool.mypy.overrides]]
# module = [
#     'poetry.console.commands.self.show.plugins',
#     'poetry.plugins.plugin_manager',
#     'poetry.repositories.installed_repository',
#     'poetry.utils.env',
# ]
# warn_unused_ignores = false

[[tool.mypy.overrides]]
# module = [
#     'cachecontrol.*',
#     'lockfile.*',
#     'pexpect.*',
#     'requests_toolbelt.*',
#     'shellingham.*',
#     'virtualenv.*',
#     'xattr.*',
# ]
# ignore_missing_imports = true


[tool.pytest.ini_options]
# addopts = "-n auto"
# testpaths = [
#     "tests"
# ]


[tool.coverage.report]
# exclude_lines = [
#     "pragma: no cover",
#     "if TYPE_CHECKING:"
# ]
